<?php
/*
Plugin Name: Shadowbox JS
Plugin URI: http://sivel.net/category/wordpress/plugins/
Description: A javascript media viewer similar to Lightbox and Thickbox.  Supports all types of media, not just images.
Version: 2.0.2.1
Author:  Matt Martz <mdmartz@sivel.net>
Author URI: http://sivel.net

        Copyright (c) 2008 Matt Martz (http://sivel.net)
        Shadowbox JS is released under the GNU General Public License (LGPL)
	http://www.gnu.org/licenses/lgpl-2.1.txt

        Shadowbox (c) 2008 Michael J. I. Jackson (http://mjijackson.com/shadowbox)
	Shadowbox is licensed under the Creative Commons Attribution-Noncommercial-Share Alike license
        http://creativecommons.org/licenses/by-nc-sa/3.0/
*/

/**
 * Specify the Javascript library you wish to use.
 * 
 * Possible values: 'none', 'yui', 'prototype', 'jquery', 'ext', 'dojo' or 'mootools'
 * 'none' runs Shadowbox in standalone mode that doesn't require a JavaScript library.
 *
 * The default is 'none'.
 *
 * @var string
 **/
$jsLib = 'none';

/**
 * Specify whether or not to use Shadowbox for all image links.  This includes 
 * WordPress galleries generated by the [gallery] shortcode.
 * 
 * Possible values: false, or true.  Do not include quotes around these values.
 *
 * The default is 'true'.  This will use Shadowbox to display all images links.
 * @var boolean
 **/
$sbAutoImg = true;

/**
 * Specify the Shadowbox skin you wish to use.
 *
 * Possible values: 'classic'
 *
 * The default is 'classic'.
 *  
 * For information about creating new skins please see the URL below
 * http://mjijackson.com/shadowbox/doc/usage.html#skin
 *
 * @var string
 **/
$sbSkin = 'classic';

/**
 * Specify the language you wish to use.
 *
 * Possible values: 'ar', 'ca', 'cs', 'de-CH', 'de-DE', 'en', 'es', 'et', 'fi', 'fr',
 * 'gl', 'he', 'id', 'is', 'it', 'ko', 'my', 'nl', 'no', 'pl', 'pt-BR', 'pt-PT', 'ro',
 * 'ru', 'sk', 'sv', 'tr', 'zh-CN', 'zh-TW'
 *
 * The default is 'en'.
 *
 * @var string
 **/
$sbLanguage = 'en';

/* No Need To Modify Anything Below This Line */

/** 
 * Time to setup our variables for the URL to your blog and to the plugin as 
 * well as some variables to shorten the amount of characters I have to type
 * later on.
 **/
$sbSiteUrl = get_option ( 'siteurl' );
// Pre-2.6 compatibility
if ( ! defined ( 'WP_CONTENT_URL' ) )
        define ( 'WP_CONTENT_URL' , get_option ( 'siteurl' ) . '/wp-content' );
// Guess the location
$sbPluginUrl = WP_CONTENT_URL . '/plugins/' . plugin_basename ( dirname (__FILE__) );

if ( $jsLib == 'none' )
	$jsLib = 'base';

$sbPre = '<script type="text/javascript"';
$sbPost = '</script>';

$sbCSS = '<link rel="stylesheet" type="text/css" href="' . $sbPluginUrl . '/css/extras.css" />';

$loadOps = 'Shadowbox.loadSkin(\'' . $sbSkin  . '\', \'' . $sbPluginUrl  . '/skin\');' . "\n";
$loadOps .= '	Shadowbox.loadLanguage(\'' . $sbLanguage . '\', \'' . $sbPluginUrl  . '/js/lang\');';

$initOps = 'flvPlayer: \'' . $sbPluginUrl . '/flvplayer.swf\'';

$sbInit = $sbPre . '>' . "\n";
$sbInit .= '	' . $loadOps . "\n";
$sbInit .= '	var sbConf = {' . "\n";
$sbInit .= '		' . $initOps . "\n";
$sbInit .= '	};' . "\n";
$sbInit .= '	window.onload = function(){' . "\n";
$sbInit .= '		Shadowbox.init(sbConf);' . "\n";
$sbInit .= '	};' . "\n";
$sbInit .= $sbPost;

$sbJS = $sbPre . ' src="' . $sbPluginUrl . '/js/adapter/shadowbox-' . $jsLib  . '.js">' . $sbPost . "\n";
$sbJS .= $sbPre . ' src="' . $sbPluginUrl . '/js/shadowbox-2.0.js">' . $sbPost . "\n" . $sbInit;

/**
 * This function is called by the add_action WordPress function
 *
 * This information is inserted into the HTML headers as the page loads
 *
 * @return string
 **/
function shadowbox_headers () {
	global $jsLib;
	$sbBegin = "\n" . '<!-- Begin Shadowbox JS -->' . "\n";
	$sbEnd = '<!-- End Shadowbox JS -->' . "\n\n";
	$sbHeader = new sbGenHead;
	print ( $sbBegin . $sbHeader->$jsLib() . $sbEnd );
}

/**
 * This is our class to make building the code to insert into the headers
 * for the different javascript libraries easier
 *
 * @return string
 **/
class sbGenHead {
	function base () {
                global $sbCSS, $sbJS;
                $output = $sbCSS . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
        function yui () {
                global $sbCSS, $sbJS, $sbPre, $sbPost;
                $output = $sbCSS . "\n";
	        $output .= $sbPre . ' src="http://yui.yahooapis.com/2.5.2/build/yahoo-dom-event/yahoo-dom-event.js">' . $sbPost . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
        function prototype () {
                global $sbCSS, $sbJS, $sbPre, $sbPost, $sbSiteUrl;
                $output = $sbCSS . "\n";
	        $output .= $sbPre . ' src="' . $sbSiteUrl . '/wp-includes/js/prototype.js">' . $sbPost . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
        function jquery () {
                global $sbCSS, $sbJS, $sbPre, $sbPost, $sbSiteUrl;
                $output = $sbCSS . "\n";
	        $output .= $sbPre . ' src="' . $sbSiteUrl . '/wp-includes/js/jquery/jquery.js">' . $sbPost . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
        function ext () {
                global $sbCSS, $sbJS, $sbPre, $sbPost, $sbPluginUrl;
                $output = $sbCSS . "\n";
	        $output .= $sbPre . ' src="' . $sbPluginUrl . 'js/ext-base.js">' . $sbPost . "\n";
		$output .= $sbPre . ' src="' . $sbPluginUrl . 'js/ext-core.js">' . $sbPost . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
        function dojo () {
                global $sbCSS, $sbJS, $sbPre, $sbPost;
                $output = $sbCSS . "\n";
	        $output .= $sbPre . ' src="http://ajax.googleapis.com/ajax/libs/dojo/1.1.1/dojo/dojo.xd.js">' . $sbPost . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
        function mootools () {
                global $sbCSS, $sbJS, $sbPre, $sbPost, $sbPluginUrl;
                $output = $sbCSS . "\n";
	        $output .= $sbPre . ' src="' . $sbPluginUrl . 'js/mootools-1.2-core.js">' . $sbPost . "\n";
                $output .= $sbJS . "\n";
                return $output;
        }
}

/**
 * This function is called by the add_filter WordPress function to 
 * link the gallery images directly to their full size counterpart
 *
 * @return string
 **/
if ( ! function_exists ( 'attachment_direct_linkage' ) ) :
	function attachment_direct_linkage ( $link , $id ) {
	        $mimetypes = array ( 'image/jpeg' , 'image/png' , 'image/gif' );
	        $post = get_post ( $id );
	        if ( in_array ( $post->post_mime_type , $mimetypes ) )
	                return wp_get_attachment_url ( $id );
	        else
	                return $link;
	}
endif;

/**
 * This function is called by the add_filter WordPress function to add 
 * the rel="shadowbox[post-123]" attribute to all image links including 
 * those generated by the [gallery] shortcode.
 *
 * @return string
 **/
function sb_add_attr_to_img_link ( $sbPostContent ) {
	global $post;
	$imgLinkPattern = '/<a(.*?)href=(\'|")([^>]*).(bmp|gif|jpe?g|png)(\'|")(.*?)>/i';
	$relPattern = '/\ rel=(\'|")(.*?)(\'|")/i';
	$boxRelPattern = '/\ rel=(\'|")(.*?)(shadow|light|no)box(.*?)(\'|")/i';
        if ( preg_match_all ( $imgLinkPattern , $sbPostContent , $imgLinks ) ) :
		foreach ( $imgLinks[0] as $imgLink ) :
			if ( ! preg_match ( $relPattern , $imgLink ) ) :
				$relAttr = 'rel=$2shadowbox[post-' . $post->ID . '];player=img;$5';
				$imgLinkRepl = '<a$1href=$2$3.$4$5 ' . $relAttr . '$6>';
				$imgLinkRepl = preg_replace ( $imgLinkPattern , $imgLinkRepl , $imgLink );
		                $sbPostContent = str_replace ( $imgLink , $imgLinkRepl , $sbPostContent );
			else :
				if ( ! preg_match ( $boxRelPattern , $imgLink ) ) :
					preg_match ( $relPattern , $imgLink , $imgLinkRel );
					$relAttr = 'rel=$2shadowbox[post-' . $post->ID . '];player=img; ' . $imgLinkRel[2] . '$5';
					$imgLinkNoRel = preg_replace( $relPattern , '' , $imgLink );
					$imgLinkRepl = '<a$1href=$2$3.$4$5 ' . $relAttr . '$6>';
					$imgLinkRepl = preg_replace ( $imgLinkPattern , $imgLinkRepl , $imgLinkNoRel );
					$sbPostContent = str_replace ( $imgLink , $imgLinkRepl , $sbPostContent );
				endif;
			endif;
		endforeach;
	endif;
	return $sbPostContent;
}

/**
 * This function will call the shadowbox_headers function above during page loads.
 **/
add_action ( 'wp_head' , 'shadowbox_headers' );

/**
 * These functions will call the functions sb_add_attr_to_gallery_link and 
 * attachment_direct_linkage during page loads.
 **/
if ( $sbAutoImg ) :
	add_filter ( 'attachment_link' , 'attachment_direct_linkage' , 10 , 2 );
	add_filter ( 'the_content' , 'sb_add_attr_to_img_link' , 11 );
endif;
?>
