#!/usr/bin/env python
'''
HOMEPAGE: www.pyfarm.net
INITIAL: Nov 21 2010
PURPOSE [FOR DEVELOPMENT PURPOSES ONLY]:
    Script meant to run and manage Client.py on
    a remote host using a screen session

    This file is part of PyFarm.
    Copyright (C) 2008-2010 Oliver Palmer

    PyFarm is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    PyFarm is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with PyFarm.  If not, see <http://www.gnu.org/licenses/>.
'''

import os
import logging
import lib.Screen as screen
import lib.Host as host
import lib.ClientProcess as client
from optparse import OptionParser

logging.basicConfig(format='%(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger('ClientProcess')
logger.setLevel(logging.DEBUG)

def query():
    logger.info("Querying client process")

def start():
    logger.info("Attempting to start client")

def restart():
    logger.info("Restarting client")

def stop():
    logger.info("Attempting to stop client")

if __name__ == '__main__':
    # command line options
    options = ('start', 'stop', 'restart', 'query')
    parser  = OptionParser()

    for option in options:
        parser.add_option(
                            "--%s" % option, dest="%s" % option,
                            default=False, action='store_true',
                            help="%s the client" % option
                         )

    (opt, args) = parser.parse_args()

    for option in options:
        if eval('opt.%s' % option):
            eval('%s()' % option)
    #for key, value in parser.values.items():
        #print key, value